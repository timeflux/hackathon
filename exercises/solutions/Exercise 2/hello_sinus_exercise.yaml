graphs:
  - id: hello_sinus
    nodes:
      - id: noisy_sinus
        module: timeflux_audio.nodes.signal
        class: Additive
        params: 
          frequencies: [1, 50] # Frequency of signal (1Hz) and line noise (50Hz)
          resolution: 128 # Sampling rate of th signal (128Hz)
          amplitudes:  [1, 0.2] # Amplitudes of signal (1) and line noise (0.2)
          name: noisy

      - id: display
        module: timeflux.nodes.debug
        class: Display

      # part 1
      # TODO: add a lowpass filter to filter the noisy signal
      # Hint: https://doc.timeflux.io/latest/api/timeflux_dsp.nodes.filters.html

      # part 2
      # TODO: add an UI to monitor the signal before and after filtering

      # part 4
      # TODO: Add a route in the UI to your own app

    edges:
      - source: noisy_sinus
        target: display

      # part 1
      # TODO: plug the noisy signal to the filter

      # part 2
      # TODO: plug the signals to the UI

    rate: 32

  # part 3
  # TODO: Create a second graph to save the data into a file

